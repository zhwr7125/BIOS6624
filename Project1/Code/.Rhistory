#Create year two data
data_three<-merge(data_base[,c("newid","group")],subset(data_easy,data_easy$years==2),by="newid")
colnames(data_three)<-c("newid","group",paste(colnames(data_three)[3:length(colnames(data_three))],"_2",sep=""))
table(data_three$group)
#factor years to compare as two groups
data_three$years_2<-as.factor(data_three$years_2)
label(data_three$hard_drugs)="Hard drug use since last visit"
#Make wide table for Baseline and Two years after
data_wide<-merge(data_base[,c("newid","AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","years_0","age_0","BMI_0","RACE_0","SMOKE_0","EDUCBAS_0","group")],data_three[,c("newid","AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","years_2","ADH_2")],by="newid")
label(data_wide$group)="hard drug at baseline"
table(data$EDUCBAS_ori,data$EDUCBAS)
library(Hmisc)
library(knitr)
library(devtools)
setwd("C:/repository/bios6624-zhwr7125/Project1/Code")
#Reading data
data<-read.csv("C:/repository/bios6624-zhwr7125/Project1/Data/hiv_6624_final.csv",header=T,na.strings = "NA")
#table(data$EDUCBAS[data$years==0])
#Make variables, some has low number
data$RACE_ori<-data$RACE
data$RACE[data$RACE_ori==1|data$RACE_ori==2]=1#white
data$RACE[data$RACE_ori==3|data$RACE_ori==4|data$RACE_ori==7|data$RACE_ori==8]=0#nON-WHITE
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
data$SMOKE_ori<-data$SMOKE
data$SMOKE[data$SMOKE_ori==1|data$SMOKE_ori==2]=0#No current smoke
data$SMOKE[data$SMOKE_ori==3]=1#current smoke
data$ADH_ori<-data$ADH
data$ADH[data$ADH_ori==1|data$ADH_ori==2]=1#Adh
data$ADH[data$ADH_ori==3|data$ADH_ori==4]=0#Not adh
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
#create a new subset with only year 0 and 2
data_easy<-subset(data[,c("newid","AGG_MENT","AGG_PHYS","LEU3N","VLOAD","ART","years","hard_drugs","age","BMI","ADH","RACE","SMOKE","EDUCBAS")],data$years==0|data$years==2)
#Create baseline data with hard drug status
data_base<-subset(data_easy,data_easy$years==0&is.na(data_easy$hard_drugs)==FALSE)
colnames(data_base)<-c("newid",paste(colnames(data_base)[2:length(colnames(data_base))],"_0",sep=""))
data_base$group[data_base$hard_drugs_0==1]=1
data_base$group[data_base$hard_drugs_0==0]=0
data_base$group<-as.factor(data_base$group)
#Create year two data
data_three<-merge(data_base[,c("newid","group")],subset(data_easy,data_easy$years==2),by="newid")
colnames(data_three)<-c("newid","group",paste(colnames(data_three)[3:length(colnames(data_three))],"_2",sep=""))
table(data_three$group)
#Make wide table for Baseline and Two years after
data_wide<-merge(data_base[,c("newid","AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","years_0","age_0","BMI_0","RACE_0","SMOKE_0","EDUCBAS_0","group")],data_three[,c("newid","AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","years_2","ADH_2")],by="newid")
label(data_wide$group)="hard drug at baseline"
#Combine unknowns as missing
#BMI missing and strange value
#strange, Improbable value, missing
#see values
data_wide$BMI_0[data_wide$BMI_0>500]
#see summary
data_wide$BMI_0[data_wide$BMI_0>500|data_wide$BMI_0==-1]<-NA
#min(data_wide$BMI_0,na.rm=TRUE)
#max(data_wide$BMI_0,na.rm=TRUE)
#Those who have BMI missing, insufficient and improbable should not be included in this model
data_final<-subset(data_wide,is.na(data_wide$BMI)==FALSE&is.na(data_wide$EDUCBAS_0)==FALSE)
write_csv(data_final, "C:/repository/bios6624-zhwr7125/Project1/Data/hivclean.csv")
table(data$EDUCBAS_ori,data$EDUCBAS)
#Reading data
data<-read.csv("C:/repository/bios6624-zhwr7125/Project1/Data/hiv_6624_final.csv",header=T,na.strings = "NA")
#table(data$EDUCBAS[data$years==0])
#Make variables, some has low number
data$RACE_ori<-data$RACE
data$RACE[data$RACE_ori==1|data$RACE_ori==2]=1#white
data$RACE[data$RACE_ori==3|data$RACE_ori==4|data$RACE_ori==7|data$RACE_ori==8]=0#nON-WHITE
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
table(data$EDUCBAS_ori,data$EDUCBAS)
library(Hmisc)
library(knitr)
library(devtools)
setwd("C:/repository/bios6624-zhwr7125/Project1/Code")
#Reading data
data<-read.csv("C:/repository/bios6624-zhwr7125/Project1/Data/hiv_6624_final.csv",header=T,na.strings = "NA")
#table(data$EDUCBAS[data$years==0])
#Make variables, some has low number
data$RACE_ori<-data$RACE
data$RACE[data$RACE_ori==1|data$RACE_ori==2]=1#white
data$RACE[data$RACE_ori==3|data$RACE_ori==4|data$RACE_ori==7|data$RACE_ori==8]=0#nON-WHITE
data$SMOKE_ori<-data$SMOKE
data$SMOKE[data$SMOKE_ori==1|data$SMOKE_ori==2]=0#No current smoke
data$SMOKE[data$SMOKE_ori==3]=1#current smoke
data$ADH_ori<-data$ADH
data$ADH[data$ADH_ori==1|data$ADH_ori==2]=1#Adh
data$ADH[data$ADH_ori==3|data$ADH_ori==4]=0#Not adh
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
table(data$EDUCBAS_ori,data$EDUCBAS)
library(Hmisc)
library(knitr)
library(devtools)
setwd("C:/repository/bios6624-zhwr7125/Project1/Code")
#Reading data
data<-read.csv("C:/repository/bios6624-zhwr7125/Project1/Data/hiv_6624_final.csv",header=T,na.strings = "NA")
#table(data$EDUCBAS[data$years==0])
#Make variables, some has low number
data$RACE_ori<-data$RACE
data$RACE[data$RACE_ori==1|data$RACE_ori==2]=1#white
data$RACE[data$RACE_ori==3|data$RACE_ori==4|data$RACE_ori==7|data$RACE_ori==8]=0#nON-WHITE
data$SMOKE_ori<-data$SMOKE
data$SMOKE[data$SMOKE_ori==1|data$SMOKE_ori==2]=0#No current smoke
data$SMOKE[data$SMOKE_ori==3]=1#current smoke
data$ADH_ori<-data$ADH
data$ADH[data$ADH_ori==1|data$ADH_ori==2]=1#Adh
data$ADH[data$ADH_ori==3|data$ADH_ori==4]=0#Not adh
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
table(data$EDUCBAS_ori,data$EDUCBAS)
#create a new subset with only year 0 and 2
data_easy<-subset(data[,c("newid","AGG_MENT","AGG_PHYS","LEU3N","VLOAD","ART","years","hard_drugs","age","BMI","ADH","RACE","SMOKE","EDUCBAS")],data$years==0|data$years==2)
#Create baseline data with hard drug status
data_base<-subset(data_easy,data_easy$years==0&is.na(data_easy$hard_drugs)==FALSE)
colnames(data_base)<-c("newid",paste(colnames(data_base)[2:length(colnames(data_base))],"_0",sep=""))
data_base$group[data_base$hard_drugs_0==1]=1
data_base$group[data_base$hard_drugs_0==0]=0
data_base$group<-as.factor(data_base$group)
#Create year two data
data_three<-merge(data_base[,c("newid","group")],subset(data_easy,data_easy$years==2),by="newid")
colnames(data_three)<-c("newid","group",paste(colnames(data_three)[3:length(colnames(data_three))],"_2",sep=""))
table(data_three$group)
#Make wide table for Baseline and Two years after
data_wide<-merge(data_base[,c("newid","AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","years_0","age_0","BMI_0","RACE_0","SMOKE_0","EDUCBAS_0","group")],data_three[,c("newid","AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","years_2","ADH_2")],by="newid")
label(data_wide$group)="hard drug at baseline"
#Combine unknowns as missing
#BMI missing and strange value
#strange, Improbable value, missing
#see values
data_wide$BMI_0[data_wide$BMI_0>500]
#see summary
data_wide$BMI_0[data_wide$BMI_0>500|data_wide$BMI_0==-1]<-NA
#min(data_wide$BMI_0,na.rm=TRUE)
#max(data_wide$BMI_0,na.rm=TRUE)
#Those who have BMI missing, insufficient and improbable should not be included in this model
data_final<-subset(data_wide,is.na(data_wide$BMI)==FALSE&is.na(data_wide$EDUCBAS_0)==FALSE)
write_csv(data_final, "C:/repository/bios6624-zhwr7125/Project1/Data/hivclean.csv")
x<-rep(-100,100,by=1)
pnrom(x,0,10000)
pnorm(x,0,10000)
plot(pnorm(x,0,10000)*x)
plot(pnorm(x,0,10000),x)
plot(x,pnorm(x,0,10000))
x<-rep(-100,100,by=1)
y[i]<-pnorm(x[i],0,10000)
y<-rep(-100,200)
for i in (1 to 200){
y[i]<-pnorm(x[i],0,10000)
}
for (i in 1 to 200){
y[i]<-pnorm(x[i],0,10000)
}
x<-rep(-100,100,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-pnorm(x[i],0,10000)
}
plot(x,y)
dim(x)
length(x)
length(y)
x<-seq(-100,100,by=1)
x<-seq(-100,100,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-pnorm(x[i],0,10000)
}
plot(x,y)
length(x)
x<-seq(-100,99,by=1)
x<-seq(-100,99,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-pnorm(x[i],0,10000)
}
plot(x,y)
x<-seq(-100,99,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10000)
}
plot(x,y)
?dnorm
x<-seq(-100,99,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-dnorm(x[i],0,100)
}
plot(x,y)
x<-seq(-100,99,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10)
}
plot(x,y)
x<-seq(-100,99,by=1)
y<-rep(-100,200)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10000)
}
plot(x,y)
x<-seq(-1000,999,by=1)
y<-rep(-1000,2000)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10000)
}
plot(x,y)
y
y
x
x<-seq(-1000,1999,by=1)
dim(x)
length(x)
length(y)
y<-rep(-1000,3000)
length(y)
x<-seq(-1000,1999,by=1)
y<-rep(-1000,3000)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10000)
}
plot(x,y)
x
max(x)
x<-seq(-1000,1999,by=1)
y<-rep(-1000,3000)
for (i in 1:200){
y[i]<-dnorm(x[i],0,100)
}
plot(x,y)
x<-seq(-1000,1999,by=1)
y<-rep(-1000,3000)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10)
}
plot(x,y)
x<-seq(-1000,1999,by=1)
y<-rep(-1000,2000)
for (i in 1:200){
y[i]<-dnorm(x[i],0,10000)
}
plot(x,y)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
x <- seq(-400, 400, length=100)
hx <- dnorm(x,0,1000)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
x <- seq(-400, 400, length=100)
hx <- dnorm(x,0,10000)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
View(con_diff)
View(con_diff)
library(readr)
library(rjags)
library(mcmcse)
library(Hmisc)
library(knitr)
library(devtools)
library(Table1)
#To get Table1, please visit
#https://rdrr.io/github/palmercl/Table1/
#install_github("palmercl/Table1")
#But I made some revise to Table 1, therefore use Macro.R to mask it.
setwd("C:/repository/bios6624-zhwr7125/Project1/Code")
source('Macro.R')
#Reading data
data<-read.csv("C:/repository/bios6624-zhwr7125/Project1/Data/hiv_6624_final.csv",header=T,na.strings = "NA")
#table(data$EDUCBAS[data$years==0])
#Make variables, some has low number
data$RACE_ori<-data$RACE
data$RACE[data$RACE_ori==1|data$RACE_ori==2]=1#white
data$RACE[data$RACE_ori==3|data$RACE_ori==4|data$RACE_ori==7|data$RACE_ori==8]=0#nON-WHITE
data$SMOKE_ori<-data$SMOKE
data$SMOKE[data$SMOKE_ori==1|data$SMOKE_ori==2]=0#No current smoke
data$SMOKE[data$SMOKE_ori==3]=1#current smoke
data$ADH_ori<-data$ADH
data$ADH[data$ADH_ori==1|data$ADH_ori==2]=1#Adh
data$ADH[data$ADH_ori==3|data$ADH_ori==4]=0#Not adh
data$EDUCBAS_ori<-data$EDUCBAS
data$EDUCBAS[data$EDUCBAS_ori==1|data$EDUCBAS_ori==2|data$EDUCBAS_ori==3|data$EDUCBAS==4]=1#LESS COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==5]=2#COLLEGE
data$EDUCBAS[data$EDUCBAS_ori==6|data$EDUCBAS_ori==7]=3#GREATER THAN COLLEGE
#factorize;
data$ART<-as.factor(data$ART)
data$SMOKE<-as.factor(data$SMOKE)
data$RACE<-as.factor(data$RACE)
data$hard_drugs<-as.factor(data$hard_drugs)
data$ADH<-as.factor(data$ADH)
data$EDUCBAS<-as.factor(data$EDUCBAS)
#set lables;
label(data$newid)="Subject ID Number"
label(data$AGG_MENT)='SF36 MCS score'
label(data$AGG_PHYS)='SF36 PCS score'
label(data$years)="years since initiating ART"
label(data$hard_drugs)="Hard drug use since last visit"
label(data$LEU3N)="# of CD4 positive cells (helpers)"
label(data$ADH)="If Adherence to meds since last visit"
label(data$ART)="Take ART at visit"
label(data$SMOKE)="Smoke"
label(data$BMI)="BMI(kg/m2)"
label(data$VLOAD)="Standardized viral load (copies/ml)"
label(data$age)="Age, years"
label(data$RACE)="Race"
label(data$EDUCBAS)="Education"
#levels;
levels(data$ART)=c("No ART",'ART')
levels(data$SMOKE)=c('Non-Current smoker','Current smoker')
table(data$SMOKE_ori,data$SMOKE)
table(is.na(data$SMOKE_ori))
table(is.na(data$SMOKE))
levels(data$RACE)=c('Non-White','White')
table(data$RACE_ori,data$RACE)
table(is.na(data$RACE_ori))
table(is.na(data$RACE))
levels(data$ADH)=c("No",'Yes')
table(data$ADH_ori,data$ADH)
table(is.na(data$ADH_ori))
table(is.na(data$ADH))
levels(data$EDUCBAS)=c("less than college",'college','greater than college')
table(data$EDUCBAS_ori,data$EDUCBAS)
table(is.na(data$EDUCBAS_ori))
table(is.na(data$EDUCBAS))
#create a new subset with only year 0 and 2
data_easy<-subset(data[,c("newid","AGG_MENT","AGG_PHYS","LEU3N","VLOAD","ART","years","hard_drugs","age","BMI","ADH","RACE","SMOKE","EDUCBAS")],data$years==0|data$years==2)
#Check mising hard drug status at baseline
missing_hard_drugs_count<-dim(subset(data_easy,data_easy$years==0&is.na(data_easy$hard_drugs)==TRUE))[1]
missing_hard_drugs_rate<-dim(subset(data_easy,data_easy$years==0&is.na(data_easy$hard_drugs)==TRUE))[1]/dim(subset(data_easy,data_easy$years==0))[1]
#Create baseline data with hard drug status
data_base<-subset(data_easy,data_easy$years==0&is.na(data_easy$hard_drugs)==FALSE)
colnames(data_base)<-c("newid",paste(colnames(data_base)[2:length(colnames(data_base))],"_0",sep=""))
data_base$group[data_base$hard_drugs_0==1]=1
data_base$group[data_base$hard_drugs_0==0]=0
data_base$group<-as.factor(data_base$group)
levels(data_base$group)<-c("No hard drug use at baseline","Hard drug use at baseline")
table(data_base$group)
#factor years to compare as two groups
data_base$years_0<-as.factor(data_base$years_0)
label(data_base$group)="hard drug at baseline"
#Create year two data
data_three<-merge(data_base[,c("newid","group")],subset(data_easy,data_easy$years==2),by="newid")
colnames(data_three)<-c("newid","group",paste(colnames(data_three)[3:length(colnames(data_three))],"_2",sep=""))
table(data_three$group)
#factor years to compare as two groups
data_three$years_2<-as.factor(data_three$years_2)
label(data_three$hard_drugs)="Hard drug use since last visit"
#Make wide table for Baseline and Two years after
data_wide<-merge(data_base[,c("newid","AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","years_0","age_0","BMI_0","RACE_0","SMOKE_0","EDUCBAS_0","group")],data_three[,c("newid","AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","years_2","ADH_2")],by="newid")
label(data_wide$group)="hard drug at baseline"
source('DataClean.R')
library(readr)
#Combine unknowns as missing
#BMI missing and strange value
#strange, Improbable value, missing
#see values
data_wide$BMI_0[data_wide$BMI_0>500]
#see summary
unknown_bmi<-c(length(data_wide$BMI_0[data_wide$BMI_0>500]),length(data_wide$BMI_0[data_wide$BMI_0==-1]),length(data_wide$BMI_0[is.na(data_wide$BMI_0)==TRUE]))
unknown_bmi_count<-table(data_wide$BMI_0>500|data_wide$BMI_0==-1|is.na(data_wide$BMI_0)==TRUE)[2]
unknown_bmi_rate<-table(data_wide$BMI_0>500|data_wide$BMI_0==-1|is.na(data_wide$BMI_0)==TRUE)[2]/(table(data_wide$BMI_0>500|data_wide$BMI_0==-1|is.na(data_wide$BMI_0)==TRUE)[1]+table(data_wide$BMI_0>500|data_wide$BMI_0==-1|is.na(data_wide$BMI_0)==TRUE)[2])
data_wide$BMI_0[data_wide$BMI_0>500|data_wide$BMI_0==-1]<-NA
#min(data_wide$BMI_0,na.rm=TRUE)
#max(data_wide$BMI_0,na.rm=TRUE)
#check education;
table(is.na(data_wide$EDUCBAS))
#table 0: Missing at baseline
var0<-c("AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","group","age_0","BMI_0","RACE_0","EDUCBAS_0","SMOKE_0")
label(data_wide$years_0)<-c("Baseline")
levels(data_wide$years_0)<-c("Baseline")
con_missing0<-missing_table(data_wide,var0,data_wide$years_0)
#table 0: Missing at 2
var2<-c("AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","ADH_2")
label(data_wide$years_2)<-c("Vist 2")
levels(data_wide$years_2)<-c("Visit 2")
con_missing2<-missing_table(data_wide,var2,data_wide$years_2)
#Those who have BMI missing, insufficient and improbable should not be included in this model
data_final<-subset(data_wide,is.na(data_wide$BMI)==FALSE&is.na(data_wide$EDUCBAS_0)==FALSE)
#table 1 at baseline and yr2
var1_0<-c("AGG_MENT_0","AGG_PHYS_0","LEU3N_0","VLOAD_0","age_0","BMI_0","RACE_0","EDUCBAS_0","SMOKE_0")
con_final_0<-final_table(data_final,var1_0,data_final$group,margin=2,single=F,ron=2)
var1_2<-c("AGG_MENT_2","AGG_PHYS_2","LEU3N_2","VLOAD_2","ADH_2")
con_final_2<-final_table(data_final,var1_2,data_final$group,margin=2,single=F,ron=2)
#table 2: difference from baseline to V2
data_final$diff_AGG_MENT=data_final$AGG_MENT_2-data_final$AGG_MENT_0
data_final$diff_AGG_PHYS=data_final$AGG_PHYS_2-data_final$AGG_PHYS_0
data_final$diff_LEU3N=data_final$LEU3N_2-data_final$LEU3N_0
data_final$diff_L_LEU3N=log(data_final$LEU3N_2)-log(data_final$LEU3N_0)
data_final$diff_VLOAD=data_final$VLOAD_2-data_final$VLOAD_0
data_final$diff_L_VLOAD=log(data_final$VLOAD_2)-log(data_final$VLOAD_0)
label(data_final$diff_AGG_MENT)="Change in SF36 MCS score"
label(data_final$diff_AGG_PHYS)="Change in SF36 PCS score"
label(data_final$diff_LEU3N)="Change in # of CD4 positive cells"
label(data_final$diff_VLOAD)="Change in Standardized viral load (copies/ml)"
label(data_final$diff_L_VLOAD)="Change in log Standardized viral load (copies/ml)"
label(data_final$diff_L_LEU3N)="Change in log # of CD4 positive cells"
var2<-c("diff_AGG_MENT","diff_AGG_PHYS","diff_L_LEU3N","diff_L_VLOAD")
con_diff<-final_table(data_final,var2,data_final$group,margin=2,single=F,ron=2)
diff<-data_final
iter <- 10000 # number of draws
#y is the outcome in the linear regression model
y <- c(DIFF$diff_MENT)
DIFF<-data_final
View(DIFF)
View(DIFF)
X <- model.matrix(~ AGG_MENT_0+hard_drugs_0+EDUCBAS_0+BMI_0+age_0+RACE_0+ADH_2+SMOKE_0, data = DIFF)
X <- model.matrix(~ AGG_MENT_0+group+EDUCBAS_0+BMI_0+age_0+RACE_0+ADH_2+SMOKE_0, data = DIFF)
View(X)
View(X)
#variables in Rjags
#N is the number of observations in your dataset and p is the number of columns in the design matrix
N <- nrow(X)
p <- ncol(X)
a <-  0.001           # invgamma shape for a non-informative prior
b <-  0.001           # invgamma rate for a non-informative prior
m <- rep(2.59, p)        # mvnorm mean
R <- matrix(0, p, p)  # mvnorm covariance(invserse gamma in pior distribution)
diag(R) <- 0.001      # note that JAGS uses dispersion matrix (scalars)
# create data list to pass to JAGS
jags_dat <- list(y = y, X = X, N = N, p = p,
a = a, b = b, m = m, R = R)
# Initialize the sampler (it's a Gibbs sampler so no need for several adaptations)
mod <- jags.model("C:/Repositories/Bios6624ClassExamples/PSAExample/Code/jags/linMod.jags", data = jags_dat, n.adapt = 1000, n.chains = 2)
mod <- jags.model("C:/repository/Bios6624ClassExamples/PSAExample/Code/jags/linMod.jags", data = jags_dat, n.adapt = 1000, n.chains = 2)
samples <- coda.samples(mod, variable.names = c("beta", "sigma2"), n.iter = iter) # generates matrix of draws from posterior dist.
samples_dic <- dic.samples(mod, n.iter = iter, type = "pD") # determine DIC of model fit (requires two chains)
samples_dic;
#Mean deviance:  3404
#penalty 11.02
#Penalized deviance: 3415
## Diagnostics
# determine if the support of the parameter space is explored well (more adaptations)
plot(samples)
View(R)
View(R)
a <-  0.001           # invgamma shape for a non-informative prior
b <-  0.001           # invgamma rate for a non-informative prior
m <- rep(0, p)        # mvnorm mean
R <- matrix(0, p, p)  # mvnorm covariance(invserse gamma in pior distribution)
diag(R) <- 0.001      # note that JAGS uses dispersion matrix (scalars)
# create data list to pass to JAGS
jags_dat <- list(y = y, X = X, N = N, p = p,
a = a, b = b, m = m, R = R)
# Initialize the sampler (it's a Gibbs sampler so no need for several adaptations)
mod <- jags.model("C:/repository/Bios6624ClassExamples/PSAExample/Code/jags/linMod.jags", data = jags_dat, n.adapt = 1000, n.chains = 2)
# Sample observations from the posterior distributions
samples <- coda.samples(mod, variable.names = c("beta", "sigma2"), n.iter = iter) # generates matrix of draws from posterior dist.
samples_dic <- dic.samples(mod, n.iter = iter, type = "pD") # determine DIC of model fit (requires two chains)
samples_dic;
#Mean deviance:  3404
#penalty 11.02
#Penalized deviance: 3415
## Diagnostics
# determine if the support of the parameter space is explored well (more adaptations)
plot(samples)
# determine amount of autocorrelation between draws (thinning parameter)
par(mfrow = c(ceiling(ncol(as.matrix(samples))/2), 2), mar = rep(1, 4))
apply(as.matrix(samples), 2, acf) # again the Gibb's sampler should have almost no autocorrelation
View(samples)
View(samples)
View(jags_dat)
View(jags_dat)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
par(mfrow=c(2,2))
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
par(mfrow=c(1,1))
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
hx <- dgamma(x,shape=0.001,rate=0.001)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
x <- seq(-10, 10, length=100)
hx <- dgamma(x,shape=0.001,rate=0.001)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
install.packages("bayesAB")
library(bayesAB)
plotInvGamma(0.001, 0.001)
plotGamma(2.001, 1.001)
plotInvGamma(2.001, 1.001)
plotGamma(0.001, 0.001)
plotInvGamma(2.001, 1.001)
plotGamma(0.001, 0.001)

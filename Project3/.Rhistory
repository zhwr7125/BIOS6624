m_loop <- glm(death30 ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
colnames(results) <- c("hospital", "mean_pred", "lower.ci", "upper.ci")
results <- as.data.frame(results)
results$mean_pred <- results$mean_pred*100
results$lower.ci <- results$lower.ci*100
results$upper.ci <- results$upper.ci*100
beep(2)
expected <- data.frame(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100
expected <- data.frame(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100
expected <- data.matrix(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100
expected
#=====================================#
# TITLE: PROJECT 3 (VA Data) Cleaning
# AUTHOR: Gordon Kordas
# DATE: 11/07/2018
#=====================================#
setwd("C:/repository/bios6624-zhwr7125/Project3")
library(ggplot2)
library(dplyr)
library(mice)
library(VIM)
library(gridExtra)
library(viridis)
library(gplots)
library(Table1)
library(Hmisc)
label(va$proced)<-"procedure"
label(va$asa)<-"patient's condition"
label(va$weight)<-"weight,lb"
label(va$height)<-"height, inches"
label(va$bmi)<-"BMI, kg/cm2"
label(va$albumin)<-"albumin, g/dL"
label(va$death30)<-"30 day mortality"
va$hospcode<-factor(va$hospcode)
va$proced<-factor(va$proced)
va$asa<-factor(va$asa)
va$death30<-factor(va$death30)
va$indicator<-factor(rep(1,26491))
levels(va$sixmonth)<-c("1980,1-6 month","1980, 7-12 month","1981, 1-6 month","1981, 7-12 month","1982, 1-6 month","1982, 7-12 month")
tab_miss<-missing_table(va,c('proced','asa','weight','height','bmi','albumin','death30'),va$indicator)
dim(tab_miss)
tab1<-final_table(va,c('proced','asa','weight','height','bmi','albumin','death30'),va$indicator,1,T,2)
#------------------#
# Read in data
#------------------#
dat <- read.csv("Data/vadata2.csv")
factor_vars <- c(2:4)
dat[,factor_vars] <- lapply(dat[,factor_vars] , factor)
dat <- dat[dat$proced != "2",]
table(dat$asa, dat$death30)
# there were very few people with asa of 1 and all survived beyond 30 days. Let's combine asa 1 and 2
dat[dat$asa == "1" & !is.na(dat$asa),]$asa <- "2"
# some BMIs are unrealistic. Let's remove those above 54
# there is a bmi of 2.5, which is crazy low, but realistically not impossible. We'll keep them for now
dat[dat$bmi > 54 & !is.na(dat$bmi),]$bmi <- NA
# logistic regression
training <- dat[dat$sixmonth != "39",]
m1 <- glm(death30 ~ albumin + bmi + asa + proced, data = training)
dat_sub <- dat[,c(1,2,3,4,7,8,9)]
dat_sub <- dat_sub[complete.cases(dat_sub),]
t_sub <- training[,c(1,2,3,4,7,8,9)]
t_sub <- t_sub[complete.cases(t_sub),]
dat_sub$t_pred <- predict(m1,newdata = dat_sub, type = "response")
#get only the periods prior to 39 with complete cases
dat_sub <- dat_sub[dat_sub$sixmonth != 39,]
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)
check_r<-aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
check_l<-aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
View(dat_sub)
View(dat_sub)
View(dat_sub39)
View(dat_sub39)
is.numeric(dat1_sub$sixmonth)
is.character(dat1_sub$sixmonth)
typeof(dat1_sub$sixmonth)
typeof(dat_sub39$t_pred)
typeof(list(dat_sub39$hospcode))
typeof(list(dat_sub$hospcode))
typeof(dat_sub$t_pred)
expected <- aggregate(dat_sub$t_pred,list(dat_sub$hospcode),mean)*100
typeof(expected)
summary(expected)
expected <- aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)*100
summary(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))
list(dat_sub39$hospcode)
list(dat_sub$hospcode)
typeof(dat_sub39)
typeof(dat_sub)
dat_sub39 <- data.matrix(dat1_sub[dat1_sub$sixmonth == 39,])
expected <- aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)*100
dat_sub39 <- data.frame(dat1_sub[dat1_sub$sixmonth == 39,])
expected <- aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)*100
aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)
typeof(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)$Group.1)
haha<-aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)$Group.1)
haha<-aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean)$Group.1
haha*100
typeof(haha)
expected <- aggregate(dat_sub39$t_pred,dat_sub39$hospcode,mean)*100
expected <- data.frame(data.matrix(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100)
expected
results1 <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
means1 <- matrix(nrow = 100, ncol = 3)
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(j in 1:100){
s <- sample(predicted, length(predicted), replace = TRUE)
means1[j,1] <- round(mean(s, na.rm = T), 4)
means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
s <- NULL
}
results1[i,2] <- round(mean(means1[,1]), 4)
results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
results1[i,1] <- i
predicted <- NULL
}
colnames(results1) <- c("hospital", "mean_pred", "lower.ci", "upper.ci")
results1 <- as.data.frame(results1)
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(j in 1:100){
s <- sample(predicted, length(predicted), replace = TRUE)
means1[j,1] <- round(mean(s, na.rm = T), 4)
means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
s <- NULL
}
#results1[i,2] <- round(mean(means1[,1]), 4)
#results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
#results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
#results1[i,1] <- i
#predicted <- NULL
}
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(j in 1:100){
s <- sample(predicted, length(predicted), replace = TRUE)
#means1[j,1] <- round(mean(s, na.rm = T), 4)
#means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
#means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
#s <- NULL
}
#results1[i,2] <- round(mean(means1[,1]), 4)
#results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
#results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
#results1[i,1] <- i
#predicted <- NULL
}
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
#for(j in 1:100){
#s <- sample(predicted, length(predicted), replace = TRUE)
#means1[j,1] <- round(mean(s, na.rm = T), 4)
#means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
#means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
#s <- NULL
#}
#results1[i,2] <- round(mean(means1[,1]), 4)
#results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
#results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
#results1[i,1] <- i
#predicted <- NULL
}
predicted <- predict(m1, newdata = hospital, type = "response")
m1
View(hospital)
View(hospital)
dat1 <- read.csv("C:/repository/bios6624-zhwr7125/Project3/Code/dat1.csv")
summary(dat1)
factor_vars <- c(1,2,4)
dat1[,factor_vars] <- lapply(dat1[,factor_vars] , factor)
# logistic regression
training <- dat1[dat1$sixmonth != "39",]
m1 <- glm(death30 ~  bmi + asa + proced, data = training,  family = binomial(link=logit))
testing <- dat1[dat1$sixmonth == "39",]
m1_pred <- predict(m1, newdata = testing)
dat1_sub <- dat1[,c(1,2,3,4,7,8,9)]
dat1_sub <- dat1_sub[complete.cases(dat1_sub),]
t_sub <- training[,c(1,2,3,4,7,8,9)]
t_sub <- t_sub[complete.cases(t_sub),]
dat1_sub$t_pred <- predict(m1,newdata = dat1_sub, type = "response")
#get only the 39 period people with complete cases
dat_sub39 <- dat1_sub[dat1_sub$sixmonth == 39,]
#the predicted death rate for each hospital based on the last six months
expected <- data.frame(data.matrix(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100)
expected
# parametric method because your repeatedly drawing from the same model, requiring more assumptions on your model
# If we need to bootstrap from predicted values
results1 <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
means1 <- matrix(nrow = 100, ncol = 3)
predicted <- predict(m1, newdata = hospital, type = "response")
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(death30 ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(j in 1:100){
s <- sample(predicted, length(predicted), replace = TRUE)
means1[j,1] <- round(mean(s, na.rm = T), 4)
means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
s <- NULL
}
results1[i,2] <- round(mean(means1[,1]), 4)
results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
results1[i,1] <- i
predicted <- NULL
}
colnames(results1) <- c("hospital", "mean_pred", "lower.ci", "upper.ci")
results1 <- as.data.frame(results1)
means <- matrix(nrow = 1000, ncol = 3)
results <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(death30 ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
m_loop <- glm(death30 ~ bmi + asa + proced, data = all)
View(all)
View(all)
View(all)
View(all)
all[all$proced==CABG_surgery]$proced2=1
all[all$proced=='CABG_surgery']$proced2=1
all[all$proced=='CABG_surgery']
all$proced=='CABG_surgery'
all$proced2[all$proced=='CABG_surgery']<-0
all$proced2[all$proced=='Valve_surgery']<-1
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(death30 ~ bmi + asa + proced2, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
m_loop <- glm(death30 ~ bmi + asa + proced2, data = all)
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
all$proced2[all$proced=='CABG_surgery']<-0
all$proced2[all$proced=='Valve_surgery']<-1
m_loop <- glm(death30 ~ bmi + asa + proced2, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
m_loop <- glm(death30 ~ bmi + asa , data = all)
m_loop <- glm(death30 ~ bmidata = all)
m_loop <- glm(death30 ~ bmi,data = all)
m_loop <- glm(death30 ~ ,data = all)
as.numeric(data$death30)
m_loop <- glm(death30 ~ bmi + asa + proced2, data = all)
as.numeric(data$death30)
as.matrix(data$death30)
as.numeric(all$death30)
m_loop <- glm(death30 ~ bmi + asa + proced2, data = all)
m_loop <- glm(as.numeric(all$death30) ~ bmi + asa + proced2, data = all)
means <- matrix(nrow = 1000, ncol = 3)
results <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(as.numeric(all$death30) ~ bmi + asa + proced2, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:1000){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(as.numeric(all$death30) ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:10){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(as.numeric(all$death30) ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
for(i in 1:4){
hospital <- recent[recent$hospcode == i,]
for(j in 1:10){
for(k in 1:4){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(as.numeric(all$death30) ~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
colnames(results) <- c("hospital", "mean_pred", "lower.ci", "upper.ci")
results <- as.data.frame(results)
results$mean_pred <- results$mean_pred*100
results$lower.ci <- results$lower.ci*100
results$upper.ci <- results$upper.ci*100
beep(2)
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
for(j in 1:150){
for(k in 1:44){
d <- training[training$hospcode == k,]
f <- sample_n(d, nrow(d), replace = T)
if(k == 1){all <- f} else(all <- rbind(all, f))
}
m_loop <- glm(as.numeric(all$death30)~ bmi + asa + proced, data = all)
pred <- predict(m_loop, hospital, type = "response")
means[j,1] <- round(mean(pred, na.rm = T), 4)
means[j,2] <- round(quantile(pred, .025, na.rm =T), 4)
means[j,3] <- round(quantile(pred, .975, na.rm =T), 4)
s <- NULL
all <- NULL
}
results[i,2] <- round(mean(means[,1]), 4)
results[i,3] <- round(mean(means[,2], na.rm = T), 4)
results[i,4] <- round(mean(means[,3], na.rm = T), 4)
results[i,1] <- i
}
# logistic regression
training <- dat1[dat1$sixmonth != "39",]
m1 <- glm(death30 ~  bmi + asa + proced, data = training,  family = binomial(link=logit))
testing <- dat1[dat1$sixmonth == "39",]
m1_pred <- predict(m1, newdata = testing)
dat1_sub <- dat1[,c(1,2,3,4,7,8,9)]
dat1_sub <- dat1_sub[complete.cases(dat1_sub),]
t_sub <- training[,c(1,2,3,4,7,8,9)]
t_sub <- t_sub[complete.cases(t_sub),]
dat1_sub$t_pred <- predict(m1,newdata = dat1_sub, type = "response")
#get only the 39 period people with complete cases
dat_sub39 <- dat1_sub[dat1_sub$sixmonth == 39,]
#the predicted death rate for each hospital based on the last six months
expected <- data.frame(data.matrix(aggregate(dat_sub39$t_pred,list(dat_sub39$hospcode),mean))*100)
expected
# parametric method because your repeatedly drawing from the same model, requiring more assumptions on your model
# If we need to bootstrap from predicted values
results1 <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
means1 <- matrix(nrow = 100, ncol = 3)
predicted <- predict(m1, newdata = hospital, type = "response")
for(i in 1:44){
hospital <- recent[recent$hospcode == i,]
predicted <- predict(m1, newdata = hospital, type = "response")
for(j in 1:100){
s <- sample(predicted, length(predicted), replace = TRUE)
means1[j,1] <- round(mean(s, na.rm = T), 4)
means1[j,2] <- round(quantile(s, .025, na.rm =T), 4)
means1[j,3] <- round(quantile(s, .975, na.rm =T), 4)
s <- NULL
}
results1[i,2] <- round(mean(means1[,1]), 4)
results1[i,3] <- round(mean(means1[,2], .025, na.rm = T), 4)
results1[i,4] <- round(mean(means1[,3], .975, na.rm = T), 4)
results1[i,1] <- i
predicted <- NULL
}
colnames(results1) <- c("hospital", "mean_pred", "lower.ci", "upper.ci")
results1 <- as.data.frame(results1)
write.csv(results1, "C:/Repositories/bios6624-zhanglingdi68/Project3//DataProcessed/boot_predicted-11182018.csv")
results1 <- read.csv(file = "C:/Repositories/bios6624-zhanglingdi68/Project3/DataProcessed/boot_predicted-11182018.csv")
# Guannan indicated that our bootstrap should be random sample from historic data repeatedly,
# fit models each time, run predict() each time, and report the mean of the predicted values.
# we then take the mean of the predicted values and compare the current time period's estimate
# to this mean value and see if they differ
# resampling the data is non-parametric because your draw of data is model independent
# runs REAL slo but runs correctly
means <- matrix(nrow = 1000, ncol = 3)
results <- matrix(nrow=44, ncol = 4)
recent <- dat1[dat1$sixmonth == "39" & !is.na(dat1$hospcode),]
